// mixins for button
// ------------------------
@mixin button-size($height, $padding, $font-size, $border-radius) {
  height: $height;
  padding: $padding;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin button-disabled($color: $btn-disable-color, $background: $btn-disable-bg, $border: $btn-disable-border) {
  &-disabled,
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      @include button-color($color, $background, $border);

      text-shadow: none;
      box-shadow: none;
    }
  }
}

@mixin button-variant-primary($color, $background) {
  @include button-color($color, $background, $background);

  text-shadow: $btn-text-shadow;
  box-shadow: $btn-primary-shadow;

  &:hover,
  &:focus {
    @include button-color(
      $color, colorPalette($background, 5), colorPalette($background, 5)
    );
  }

  &:active,
  &.active {
    @include button-color(
      $color, colorPalette($background, 7), colorPalette($background, 7)
    );
  }

  @include button-disabled;
}

@mixin button-variant-other($color, $background, $border) {
  @include button-color($color, $background, $border);

  &:hover,
  &:focus {
    @include button-color(
      colorPalette($btn-primary-bg, 5), $background, colorPalette($btn-primary-bg, 5)
    );
  }
  &:active,
  &.active {
    @include button-color(
      colorPalette($btn-primary-bg, 7), $background, colorPalette($btn-primary-bg, 7)
    );
  }
  @include button-disabled();
}
@mixin button-variant-danger($color, $background, $border) {
  @include button-color($color, $background, $border);
  &:hover {
    @include button-color(
      $btn-primary-color, colorPalette($color, 5), colorPalette($color, 5)
    );
  }
  &:focus {
    @include button-color(
      colorPalette($color, 5), $component-background, colorPalette($color, 5)
    );
  }
  &:active,
  &.active {
    @include button-color(
      $btn-primary-color, colorPalette($color, 7), colorPalette($color, 7)
    );
  }
  @include button-disabled();
}
@mixin button-variant-ghost($color, $border: $color) {
  @include button-color($color, transparent, $border);
  text-shadow: none;
  &:hover,
  &:focus {
    @if $border == transparent {
      & {
        @include button-color(colorPalette($color, 5), transparent, transparent);
      }
    }
    @if $border != transparent {
      & {
        @include button-color(colorPalette($color, 5), transparent, colorPalette($color, 5));
      }
    }
  }
  &:active,
  &.active {
    @if $border == transparent {
      & {
        @include button-color(colorPalette($color, 7), transparent, transparent);
      }
    }
    @if $border != transparent {
      & {
        @include button-color(colorPalette($color, 7), transparent, colorPalette($color, 7));
      }
    }
  }
  @include button-disabled();
}
@mixin button-color($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  // a inside Button which only work in Chrome
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color: currentColor;
    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: transparent;
      content: '';
    }
  }
}
@mixin button-group-base($btnClassName) {
  position: relative;
  display: inline-block;
  > .#{$btnClassName},
  > span > .#{$btnClassName} {
    position: relative;
    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index: 2;
    }
    &:disabled {
      z-index: 0;
    }
  }
  // size
  &-lg > .#{$btnClassName},
  &-lg > span > .#{$btnClassName} {
    @include button-size($btn-height-lg, $btn-padding-lg, $btn-font-size-lg, 0);
    line-height: $btn-height-lg - 2px;
  }
  &-sm > .#{$btnClassName},
  &-sm > span > .#{$btnClassName} {
    @include button-size($btn-height-sm, $btn-padding-sm, $font-size-base, 0);
    line-height: $btn-height-sm - 2px;
    > .#{$iconfont-css-prefix} {
      font-size: $font-size-base;
    }
  }
}
// Base styles of buttons
// --------------------------------------------------
@mixin btn() {
  position: relative;
  display: inline-block;
  font-weight: $btn-font-weight;
  white-space: nowrap;
  text-align: center;
  background-image: none;
  border: $btn-border-width $btn-border-style transparent;
  box-shadow: $btn-shadow;
  cursor: pointer;
  transition: all 0.3s $ease-in-out;
  user-select: none;
  touch-action: manipulation;
  @include button-size($btn-height-base, $btn-padding-base, $font-size-base, $btn-border-radius-base);
  > .#{$iconfont-css-prefix} {
    line-height: 1;
  }
  &,
  &:active,
  &:focus {
    outline: 0;
  }
  &:not([disabled]):hover {
    text-decoration: none;
  }
  &:not([disabled]):active {
    outline: 0;
    box-shadow: none;
  }
  &.disabled,
  &[disabled] {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }
  &-lg {
    @include button-size($btn-height-lg, $btn-padding-lg, $btn-font-size-lg, $btn-border-radius-base);
  }
  &-sm {
    @include button-size($btn-height-sm, $btn-padding-sm, $btn-font-size-sm, $btn-border-radius-sm);
  }
}
// primary button style
@mixin btn-primary() {
  @include button-variant-primary($btn-primary-color, $btn-primary-bg);
}
// default button style
@mixin btn-default() {
  @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
  &:hover,
  &:focus,
  &:active,
  &.active {
    text-decoration: none;
    background: $btn-default-bg;
  }
}
// ghost button style
@mixin btn-ghost() {
  @include button-variant-other($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);
}
// dashed button style
@mixin btn-dashed() {
  @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
  border-style: dashed;
}
// danger button style
@mixin btn-danger() {
  @include button-variant-danger($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}
// link button style
@mixin btn-link() {
  @include button-variant-other($link-color, transparent, transparent);
  box-shadow: none;
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include button-disabled($disabled-color, transparent, transparent);
}
// round button
@mixin btn-round($btnClassName: btn) {
  @include button-size($btn-circle-size, 0 $btn-circle-size / 2, $font-size-base + 2px, $btn-circle-size);
  &.#{$btnClassName}-lg {
    @include button-size(
      $btn-circle-size-lg, 0 $btn-circle-size-lg / 2, $btn-font-size-lg + 2px, $btn-circle-size-lg
    );
  }
  &.#{$btnClassName}-sm {
    @include button-size(
      $btn-circle-size-sm, 0 $btn-circle-size-sm / 2, $font-size-base, $btn-circle-size-sm
    );
  }
}
// circle button: the content only contains icon
@mixin btn-circle($btnClassName: btn) {
  @include square($btn-circle-size);
  @include button-size($btn-circle-size, 0, $font-size-base + 2px, 50%);
  &.#{$btnClassName}-lg {
    @include square($btn-circle-size-lg);
    @include button-size($btn-circle-size-lg, 0, $btn-font-size-lg + 2px, 50%);
  }
  &.#{$btnClassName}-sm {
    @include square($btn-circle-size-sm);
    @include button-size($btn-circle-size-sm, 0, $font-size-base, 50%);
  }
}
// Horizontal button groups style
// --------------------------------------------------
@mixin btn-group($btnClassName: btn) {
  @include button-group-base($btnClassName);
  .#{$btnClassName} + .#{$btnClassName},
  .#{$btnClassName} + &,
  span + .#{$btnClassName},
  .#{$btnClassName} + span,
  > span + span,
  & + .#{$btnClassName},
  & + & {
    margin-left: -1px;
  }
  .#{$btnClassName}-primary + .#{$btnClassName}:not(.#{$btnClassName}-primary):not([disabled]) {
    border-left-color: transparent;
  }
  .#{$btnClassName} {
    border-radius: 0;
  }
  > .#{$btnClassName}:first-child,
  > span:first-child > .#{$btnClassName} {
    margin-left: 0;
  }
  > .#{$btnClassName}:only-child {
    border-radius: $btn-border-radius-base;
  }
  > span:only-child > .#{$btnClassName} {
    border-radius: $btn-border-radius-base;
  }
  > .#{$btnClassName}:first-child:not(:last-child),
  > span:first-child:not(:last-child) > .#{$btnClassName} {
    border-top-left-radius: $btn-border-radius-base;
    border-bottom-left-radius: $btn-border-radius-base;
  }
  > .#{$btnClassName}:last-child:not(:first-child),
  > span:last-child:not(:first-child) > .#{$btnClassName} {
    border-top-right-radius: $btn-border-radius-base;
    border-bottom-right-radius: $btn-border-radius-base;
  }
  &-sm {
    > .#{$btnClassName}:only-child {
      border-radius: $btn-border-radius-sm;
    }
    > span:only-child > .#{$btnClassName} {
      border-radius: $btn-border-radius-sm;
    }
    > .#{$btnClassName}:first-child:not(:last-child),
    > span:first-child:not(:last-child) > .#{$btnClassName} {
      border-top-left-radius: $btn-border-radius-sm;
      border-bottom-left-radius: $btn-border-radius-sm;
    }
    > .#{$btnClassName}:last-child:not(:first-child),
    > span:last-child:not(:first-child) > .#{$btnClassName} {
      border-top-right-radius: $btn-border-radius-sm;
      border-bottom-right-radius: $btn-border-radius-sm;
    }
  }
  & > & {
    float: left;
  }
  & > &:not(:first-child):not(:last-child) > .#{$btnClassName} {
    border-radius: 0;
  }
  & > &:first-child:not(:last-child) {
    > .#{$btnClassName}:last-child {
      padding-right: 8px;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
  & > &:last-child:not(:first-child) > .#{$btnClassName}:first-child {
    padding-left: 8px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

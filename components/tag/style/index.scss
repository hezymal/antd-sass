@import '../../style/themes/index';
@import '../../style/mixins/index';

$tag-prefix-cls: '#{$ant-prefix}-tag';

.#{$tag-prefix-cls} {
  @include reset-component;

  display: inline-block;
  height: auto;
  margin-right: 8px;
  padding: 0 7px;
  font-size: $tag-font-size;
  line-height: 20px;
  white-space: nowrap;
  background: $tag-default-bg;
  border: $border-width-base $border-style-base $border-color-base;
  border-radius: $border-radius-base;
  cursor: default;
  opacity: 1;
  transition: all 0.3s $ease-in-out-circ;

  &:hover {
    opacity: 0.85;
  }

  &,
  a,
  a:hover {
    color: $tag-default-color;
  }

  > a:first-child:last-child {
    display: inline-block;
    margin: 0 -8px;
    padding: 0 8px;
  }

  .#{$iconfont-css-prefix}-close {
    @include iconfont-size-under-12px(10px);

    margin-left: 3px;
    color: $text-color-secondary;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s $ease-in-out-circ;

    &:hover {
      color: $heading-color;
    }
  }

  &-has-color {
    border-color: transparent;
    &,
    a,
    a:hover,
    .#{$iconfont-css-prefix}-close,
    .#{$iconfont-css-prefix}-close:hover {
      color: $text-color-inverse;
    }
  }

  &-checkable {
    background-color: transparent;
    border-color: transparent;
    &:not(&-checked):hover {
      color: $primary-color;
    }
    &:active,
    &-checked {
      color: $text-color-inverse;
    }
    &-checked {
      background-color: $primary-6;
    }
    &:active {
      background-color: $primary-7;
    }
  }

  &-hidden {
    display: none;
  }

  // mixin to iterate over colors and create CSS class for each one
  @mixin make-color-classes() {
    @for $i from length($preset-colors) through 1 {
      $color: nth($preset-colors, $i);
      $lightColor: map-get($color-schema, '#{$color}-1');
      $lightBorderColor: map-get($color-schema, '#{$color}-3');
      $darkColor: map-get($color-schema, '#{$color}-6');
      &-#{$color} {
        color: $darkColor;
        background: $lightColor;
        border-color: $lightBorderColor;
      }
      &-#{$color}-inverse {
        color: $text-color-inverse;
        background: $darkColor;
        border-color: $darkColor;
      }
    }
  }

  @include make-color-classes();
}
